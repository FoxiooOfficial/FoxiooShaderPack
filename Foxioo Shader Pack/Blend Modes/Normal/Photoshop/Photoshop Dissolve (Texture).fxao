/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.1 (12.01.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
// uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform float _Mixing;

/************************************************************/
/* Main */
/************************************************************/

void main(void)
{
    // vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    // vec4 _Render_Background = texture2D(bckgTexture, In);

        vec4 _Result = _Render_Texture;
        float _Random = fract(sin(dot(In.xy, vec2(12.9898, 78.233))) * 43758.5453);
    
        if (_Random < _Mixing)
        {
            _Result.a = 0.0;
        }
    
        //_Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End
