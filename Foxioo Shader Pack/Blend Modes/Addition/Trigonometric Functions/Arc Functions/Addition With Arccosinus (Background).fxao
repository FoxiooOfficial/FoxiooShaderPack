/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.5 (23.09.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */


//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform float _Mixing;
uniform float _Mul;
uniform int _Render_Switch;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

vec4 Fun_Acos(vec4 _Color)
{  
    vec4 _2Color = _Color * _Color;
    return 3.14159265359 / 2.0 - (_Color + (_2Color * _Color) / 6.0 + (3.0 * _2Color * _2Color * _Color) / 40.0 + (5.0 * _2Color * _2Color * _2Color * _Color) / 112.0);
}

void main(void)
{
	vec2 In_Background = vec2(In.x, 1.0 - In.y);
	
	vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
	vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

    	// _Render_Switch = 0 (Acos mode from OpenGL)
    	vec4 _Result = acos(_Render_Texture + (_Render_Background * _Mul));

    	if (_Render_Switch == 1)
    	{
    	    // _Render_Switch = 1 (Acos mode SIMULATED from Direct3D9)
    	    _Result = abs(Fun_Acos(_Render_Texture + (_Render_Background * _Mul)));
    	}
		
    	else if (_Render_Switch == 2)
    	{
    	    // _Render_Switch = 2 (Acos mode SIMULATED from Direct3D11)
    	    _Result = Fun_Acos(_Render_Texture + (_Render_Background * _Mul));
    	}

		        _Result.rgb = mix(_Render_Texture.rgb, _Result.rgb, _Mixing);
        _Result.a = _Render_Texture.a;

	gl_FragColor = _Result;
}

//@End
