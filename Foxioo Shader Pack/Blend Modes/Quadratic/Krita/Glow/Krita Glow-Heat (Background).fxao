/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.0 (08.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform float _Mixing;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

        vec4 _Glow;
        vec4 _Heat;

            _Glow.rgb = clamp(pow(abs(_Render_Background.rgb), vec3(2.0)) / (1.0 - (_Render_Texture.rgb * _Mixing)), 0.0, 1.0);
            _Heat.rgb = clamp(1.0 - pow(1.0 - _Render_Texture.rgb, vec3(2.0)) / _Render_Background.rgb, 0.0, 1.0);

        vec4 _Result = mix(_Glow, _Heat, 0.5);

                _Result.rgb = mix(_Render_Texture.rgb, _Result.rgb * _Mixing, _Mixing);
    
        _Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End