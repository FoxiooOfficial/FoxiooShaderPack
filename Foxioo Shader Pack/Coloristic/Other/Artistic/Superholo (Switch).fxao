/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.1 (10.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform float _Mixing;
uniform bool _Blending_Mode;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

        vec4 _Result;
        vec4 _Render;

        if (_Blending_Mode == false)
        {   
            _Render = _Render_Texture; 
            _Result = _Render_Texture;
        }
        else
        {
            _Render = _Render_Background; 
            _Result = _Render_Background;
        }

            _Result.rgb *= vec3(0.02, 0.01, 0.5);
            _Result.r = mix(0.0, 1.0, _Result.b / 2.0);

                vec3 _ColorRed   = vec3(1.0, 0.2, 0.5);
                vec3 _ColorGreen = vec3(0.6, 1.0, 0.1);
                vec3 _ColorBlue  = vec3(0.2, 1.0, 0.8);

                _Result.r += mix(0.0, _ColorRed.r,   clamp((_Render.r - 0.75) / 0.25, 0.0, 1.0));
                _Result.g += mix(0.0, _ColorGreen.g, clamp((_Render.g - 0.75) / 0.25, 0.0, 1.0));
                _Result.b += mix(0.0, _ColorBlue.b,  clamp((_Render.b - 0.75) / 0.25, 0.0, 1.0));

            _Result.rgb = pow(_Result.rgb, vec3(1.0 / 2.2)); 

        _Result.rgb = mix(_Render.rgb, _Result.rgb, _Mixing); 
        _Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End