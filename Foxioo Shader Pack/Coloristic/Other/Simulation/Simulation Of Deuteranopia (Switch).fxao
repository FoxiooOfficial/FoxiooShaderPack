/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.1 (10.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform int _Blending_Mode;
uniform float _Mixing;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

mat3 Fun_Rw(vec3 _R0, vec3 _R1, vec3 _R2) {

    return mat3(
        _R0.x, _R1.x, _R2.x,
        _R0.y, _R1.y, _R2.y,
        _R0.z, _R1.z, _R2.z 
    );
}


void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In) * blendColor;

        vec4 _Render =      _Blending_Mode == 1 ? _Render_Background : _Render_Texture;

        /* The _ColorMatrix variables are taken from: https://github.com/MaPePeR/jsColorblindSimulator */
        mat3 ColorMatrix = Fun_Rw(
            vec3(0.625, 0.375, 0.0),
            vec3(0.70,  0.30,  0.0),
            vec3(0.0,   0.30,  0.70)
        );


        _Render.rgb = mix(_Render.rgb, (ColorMatrix * _Render.rgb) * _Mixing, _Mixing);
    
    _Render.a = _Render_Texture.a;
    gl_FragColor = _Render;
}

//@End
