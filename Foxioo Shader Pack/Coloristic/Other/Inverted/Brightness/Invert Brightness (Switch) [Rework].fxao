/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.7 (17.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform bool _Blending_Mode;
uniform float _Mixing;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

vec3 Fun_Lum(vec3 _Render)
{
    float Y = 0.299     * _Render.r + 0.587      *_Render.g + 0.114     * _Render.b;
    float U = -0.14713  * _Render.r - 0.28886   * _Render.g + 0.436     * _Render.b;
    float V =  0.615    * _Render.r - 0.51499   * _Render.g - 0.10001   * _Render.b;
    Y = 1.0 - Y;

    vec3 _Result;
        _Result.r = Y + 1.13983 * V;
        _Result.g = Y - 0.39465 * U - 0.58060 * V;
        _Result.b = Y + 2.03211 * U;

    return clamp(_Result, 0.0, 1.0);
}

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

    vec4 _Result = vec4(0.0);
    vec4 _Render = vec4(0.0);
        
        if(_Blending_Mode == false)
        {
            _Result.rgb = Fun_Lum(_Render_Texture.rgb);
            _Render = _Render_Texture;
        }
        else
        {
            _Result.rgb = Fun_Lum(_Render_Background.rgb);
            _Render = _Render_Background;
        }
    
        _Result.a = _Render_Texture.a;
        _Result.rgb = mix(_Render.rgb, _Result.rgb, _Mixing);

    gl_FragColor = _Result;
}

//@End
