/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.2 (08.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform float _Mixing;
uniform bool _Blending_Mode;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

        vec4 _Result;

        if(_Blending_Mode == false)
        {
            _Result = _Render_Texture;
        }
        else
        {
            _Result = _Render_Background;
        }

            float _Y = 0.257 * _Result.r + 0.504 * _Result.g + 0.098 * _Result.b + 0.0625;
            float _U = -0.148 * _Result.r - 0.291 * _Result.g + 0.439 * _Result.b + 0.5;
            float _V = 0.439 * _Result.r - 0.368 * _Result.g - 0.071 * _Result.b + 0.5;

        _Result.a = _Render_Texture.a;

        _Result.rgb = mix(_Result.rgb, vec3(_Y, _U, _V), _Mixing);

    gl_FragColor = _Result;
}

//@End
