/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.1 (13.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform bool _Blending_Mode;
uniform float _Time;
uniform float _Mixing;
uniform bool _Is_Pre_296_Build;

const vec3 _Blend_0 = vec3(0.2, 0.3, 0.4);
const vec3 _Blend_1 = vec3(0.8, 0.5, 0.2);
const vec3 _Blend_2 = vec3(1.0, 0.8, 0.6);
const vec3 _Blend_3 = vec3(1.0, 1.0, 1.0);
const vec3 _Blend_4 = vec3(1.0, 0.9, 0.8);
const vec3 _Blend_5 = vec3(0.8, 0.4, 0.2);

/************************************************************/
/* Main */
/************************************************************/

float Fun_FMod(float _Value, float _Denom)
{
    return _Value - _Denom * floor(_Value / _Denom);
}

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

    vec4 _Result;
    vec4 _Render;

    if (_Blending_Mode == false)
    {   
        _Render = _Render_Texture; 
        _Result = _Render_Texture;
    }
    else
    {
        _Render = _Render_Background; 
        _Result = _Render_Background;
    }
        // What I wrote here
        float _Time_Temp = Fun_FMod(_Time, 24.0);
        if (_Time_Temp < 0.0) _Time_Temp = 24.0 - abs(_Time_Temp);

            if (_Time_Temp < 4.0) {
                _Render.rgb *= mix(_Blend_0, _Blend_1, _Time_Temp / 4.0);
            }
            else if (_Time_Temp < 6.0) {
                _Render.rgb *= mix(_Blend_1, _Blend_2, (_Time_Temp - 4.0) / 2.0);
            }
            else if (_Time_Temp < 12.0) {
                _Render.rgb *= mix(_Blend_2, _Blend_3, (_Time_Temp - 6.0) / 6.0);
            }
            else if (_Time_Temp < 16.0) {
                _Render.rgb *= mix(_Blend_3, _Blend_4, (_Time_Temp - 12.0) / 4.0);
            }
            else if (_Time_Temp < 18.0) {
                _Render.rgb *= mix(_Blend_4, _Blend_5, (_Time_Temp - 16.0) / 2.0);
            }
            else {
                _Render.rgb *= mix(_Blend_5, _Blend_0, (_Time_Temp - 18.0) / 6.0);
            }

    _Result = mix(_Result, _Render, _Mixing);
    _Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End