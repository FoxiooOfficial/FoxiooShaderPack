/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.4 (28.08.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform bool _Blending_Mode;
uniform float _Temperature;
uniform float _Mixing;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

float Fun_FMod(float _Value, float _Denom)
{
    return _Value - _Denom * floor(_Value / _Denom);
}

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In);

    vec4 _Result;
    vec4 _Render;

        if(_Blending_Mode == false)
        {
            _Result.r = (_Render_Texture.r + (_Temperature / 273.15)) * _Mixing;
		    _Result.g = (_Render_Texture.g + (_Temperature / 273.15) / 2.0) * _Mixing;
		    _Result.b = (_Render_Texture.b) * _Mixing;
            _Render = _Render_Texture;
        }
        else
        {
            _Result.r = (_Render_Background.r + (_Temperature / 273.15)) * _Mixing;
		    _Result.g = (_Render_Background.g + (_Temperature / 273.15) / 2.0) * _Mixing;
		    _Result.b = (_Render_Background.b) * _Mixing;
            _Render = _Render_Background;
        }

    _Result.rgb = mix(_Render.rgb, _Result.rgb, _Mixing);
    _Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End