/***********************************************************/

/* Autor shader: Foxioo */
/* Version shader: 1.0 (23.09.2025) */
/* My GitHub: https://github.com/FoxiooOfficial */

/***********************************************************/

/* ####################################################### */

//@Begin_vertex

#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 In;

void main(void)
{
	In = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}

//@End

/* ####################################################### */

//@Begin_fragment

#ifdef GL_ES
 precision mediump float;
#endif

varying vec2 In;

/***********************************************************/
/* Samplers */
/***********************************************************/

uniform sampler2D imgTexture;
uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

/***********************************************************/
/* Varibles */
/***********************************************************/

uniform bool _Blending_Mode;
uniform float _Mixing;
uniform float _Cyan;
uniform float _Magenta;
uniform float _Yellow;
uniform float _Black;
uniform bool _Is_Pre_296_Build;

/************************************************************/
/* Main */
/************************************************************/

vec4 RGBtoCMYK(vec3 _Render)
{
    vec4 _CMYK;

        _CMYK.x = 1.0 - max(_Render.r, max(_Render.g, _Render.b));  /*  Black   */
        _CMYK.y = (1.0 - _Render.r - _CMYK.x) / (1.0 - _CMYK.x);    /*  Cyan    */
        _CMYK.z = (1.0 - _Render.g - _CMYK.x) / (1.0 - _CMYK.x);    /*  Magenta */
        _CMYK.w = (1.0 - _Render.b - _CMYK.x) / (1.0 - _CMYK.x);    /*  Yellow  */
    
    return _CMYK.yzwx;
}

vec3 CMYKtoRGB(vec4 _CMYK)
{
    vec3 _Render;

        _Render.r = (1.0 - _CMYK.r) * (1.0 - _CMYK.w);
        _Render.g = (1.0 - _CMYK.g) * (1.0 - _CMYK.w);
        _Render.b = (1.0 - _CMYK.b) * (1.0 - _CMYK.w);
    
    return _Render;
}

vec4 Fun_CMYKMagic(vec4 _Result)
{
    vec4 _CMYK = RGBtoCMYK(_Result.rgb);
    
    vec4  _Value = vec4(_Cyan, _Magenta, _Yellow, _Black);
            _Value /= 100.0;

                _CMYK -= _Value;
    
    _Result.rgb = CMYKtoRGB(_CMYK);
    return _Result;
}

void main(void)
{
    vec2 In_Background = vec2(In.x, 1.0 - In.y);

    vec4 _Render_Texture = texture2D(imgTexture, In) * blendColor;
    vec4 _Render_Background = _Is_Pre_296_Build ? texture2D(bckgTexture, In_Background) : texture2D(bckgTexture, In) * blendColor;

        vec4 _Result = _Blending_Mode ? _Render_Background : _Render_Texture;
        vec4 _Render = _Result;

                _Result = Fun_CMYKMagic(_Result);

            _Result.rgb = mix(_Render.rgb, _Result.rgb, _Mixing);
            _Result.a = _Render_Texture.a;

    gl_FragColor = _Result;
}

//@End
